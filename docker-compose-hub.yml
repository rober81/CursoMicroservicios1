version: '3.5'
services:
    clientesApi:
        container_name: clientes-service
        image: rpiombi/clientes-service:latest
        depends_on:
            - kafka
            - jaeger
            - kibana
        ports:
            - 8080:8080
        environment:
            - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
            - OTEL_SERVICE_NAME=clientesApi
            - OTEL_METRICS_EXPORTER=none
            - OTEL_TRACES_EXPORTER=jaeger
            - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
        networks:
            - microservicios-network

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 22181:2181
        networks:
            - microservicios-network

    kafka:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper
        ports:
            - 9092:9092
            - 29092:29092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092,PLAINTEXT_INTERNAL://broker:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        networks:
            - microservicios-network

    transferenciasApi:
        container_name: transferencias-service
        image: rpiombi/transferencias-service:latest
        depends_on:
            - clientesApi
            - kafka
            - redis
            - kibana
            - jaeger
        ports:
            - 8090:8090
        environment:
            - API_CONFIG_CLIENTE_URL=http://clientesApi:8080/clientes/
            - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
            - SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS=kafka:9092
            - OTEL_SERVICE_NAME=transferenciasApi
            - OTEL_METRICS_EXPORTER=none
            - OTEL_TRACES_EXPORTER=jaeger
            - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
            - REDIS_SERVER=redis
        networks:
            - microservicios-network

    redis:
        image: 'bitnami/redis:latest'    
        environment:
        - REDIS_PORT_NUMBER=7000
        - ALLOW_EMPTY_PASSWORD=yes        
        ports:
        - '7000:7000'
        networks:
            - microservicios-network

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
        container_name: elasticsearch_springboot
        environment:
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - "discovery.type=single-node"
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
        networks:
            - microservicios-network

    kibana:
        image: docker.elastic.co/kibana/kibana:8.3.3
        container_name: kibana_springboot
        ports:
            - "5601:5601"
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
        depends_on:
            - elasticsearch
        networks:
            - microservicios-network

    logstash:
        image: docker.elastic.co/logstash/logstash:8.3.3
        container_name: logstash_springboot
        volumes:
            - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
            - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
        ports:
            - "5044:5044"
            - "5000:5000/tcp"
            - "5000:5000/udp"
            - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        networks:
            - microservicios-network
        depends_on:
            - elasticsearch

    jaeger:
        container_name: jaeger
        image: jaegertracing/all-in-one:latest
        ports:
            - "16686:16686"
            - "14250:14250"
        networks:
            - microservicios-network

networks:
    microservicios-network:
        driver: bridge

volumes:
    elasticsearch_data:
        driver: local